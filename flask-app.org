#+PROPERTY: header-args :session plasma :export both :tangle yes

* imports
#+BEGIN_SRC python
    from flask import Flask
    app = Flask(__name__)
#+END_SRC



* route

The route() function binds a function to an URL

#+BEGIN_SRC python
    @app.route('/')
    def index():
        return 'Index Page'
#+END_SRC


* rules variables

You can add variable sections to a URL by marking sections with <variable_name>. Your function then receives the
<variable_name> as a keyword argument.

Optionally, you can use a converter to specify the type of the argument like
<converter:variable_name>

#+BEGIN_SRC python
@app.route('/user/<username>')
def show_user_profile(username):
    # show the user profile for that user
    return 'User %s' % username

@app.route('/post/<int:post_id>')
def show_post(post_id):
    # show the post with the given id, the id is an integer
    return 'Post %d' % post_id

@app.route('/path/<path:subpath>')
def show_subpath(subpath):
    # show the subpath after /path/
    return 'Subpath %s' % subpath
#+END_SRC



* URL building

#+BEGIN_SRC python

    from flask import url_for

    @app.route('/login')
    def login():
        return 'login'

    @app.route('/usr/<username>')
    def profile(username):
        return '{}\'s profile'.format(username)

    with app.test_request_context():
        print(url_for('index'))
        print(url_for('login'))
        print(url_for('login', next='/'))
        print(url_for('profile', username='John Doe'))

#+END_SRC


* rendering templates

#+BEGIN_SRC python

from flask import render_template

@app.route('/hello/')
@app.route('/hello/<name>')
def hello(name=None):
    return render_template('hello.html', name=name)

#+END_SRC


* htmlfontify emacs function

#+BEGIN_SRC python

    @app.route('/codex/')
    def codex():
        return render_template('codex.html')

    @app.route('/hello-ob/')
    def hello_ob():
        return render_template('hello-ob.html')

#+END_SRC
